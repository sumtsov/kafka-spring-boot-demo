version: '3.8'

services:
  kafka-consumer-service:
    image: sumtsov/kafka-consumer-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    networks:
      - kafka-network
    container_name: kafka-consumer-service  
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on: 
      kafka-producer-service:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1 

  kafka-producer-service:
    image: sumtsov/kafka-producer-service:0.0.1-SNAPSHOT
    ports: 
      - "8080:8080"
    networks: 
      - kafka-network
    container_name: kafka-producer-service  
    environment: 
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on: 
      kafka:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    networks:
      - kafka-network  
    container_name: kafka  
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:29092 --list

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 22181:2181
    networks:
      - kafka-network  
    container_name: zookeeper  
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:        
      test: nc -z localhost 2181 || exit -1    

networks: 
    kafka-network:      